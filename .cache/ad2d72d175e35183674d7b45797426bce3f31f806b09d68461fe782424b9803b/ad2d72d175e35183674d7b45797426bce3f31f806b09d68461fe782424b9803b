/* lib/service-worker.ts */
export default (async () => {
    const { clientsClaim } = await mod;
    const { ExpirationPlugin } = await mod1;
    const { precacheAndRoute, createHandlerBoundToURL } = await mod2;
    const { registerRoute } = await mod3;
    const { StaleWhileRevalidate } = await mod4;
    const PUBLIC_URL = "https://alfredosalzillo.me/blobs-dead-or-alive/";
    clientsClaim();
    precacheAndRoute(self.__WB_MANIFEST || []);
    const fileExtensionRegexp = new RegExp("/[^/?]+\\.[^/]+$");
    registerRoute(({ request, url }) => {
        if (request.mode !== "navigate") {
            return false;
        }
        if (url.pathname.startsWith("/_")) {
            return false;
        }
        if (url.pathname.match(fileExtensionRegexp)) {
            return false;
        }
        return true;
    }, createHandlerBoundToURL(PUBLIC_URL + "/index.html"));
    registerRoute(({ url }) => url.origin === self.location.origin && url.pathname.endsWith(".png"), new StaleWhileRevalidate({
        cacheName: "images", plugins: [
            new ExpirationPlugin({ maxEntries: 50 })
        ]
    }));
    self.addEventListener("message", (event) => {
        if (event.data && event.data.type === "SKIP_WAITING") {
            self.skipWaiting();
        }
    });
    return {};
})();
