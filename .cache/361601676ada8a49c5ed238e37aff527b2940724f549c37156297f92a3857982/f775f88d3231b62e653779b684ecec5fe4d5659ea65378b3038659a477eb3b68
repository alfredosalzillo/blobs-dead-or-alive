/* https://cdn.esm.sh/v41/object-assign@4.1.1/deno/object-assign.js */
const mod = (async () => {
    var b = Object.create, s = Object.defineProperty, p = Object.getPrototypeOf, O = Object.prototype.hasOwnProperty, j = Object.getOwnPropertyNames, g = Object.getOwnPropertyDescriptor;
    var m = r => s(r, "__esModule", { value: !0 });
    var v = (r, e) => () => (e || r((e = { exports: {} }).exports, e), e.exports);
    var y = (r, e, t) => {
        if (e && typeof e == "object" || typeof e == "function")
            for (let n of j(e))
                !O.call(r, n) && n !== "default" && s(r, n, { get: () => e[n], enumerable: !(t = g(e, n)) || t.enumerable });
        return r;
    }, h = r => y(m(s(r != null ? b(p(r)) : {}, "default", r && r.__esModule && "default" in r ? { get: () => r.default, enumerable: !0 } : { value: r, enumerable: !0 })), r);
    var l = v((q, u) => {
        "use strict";
        var i = Object.getOwnPropertySymbols, d = Object.prototype.hasOwnProperty, w = Object.prototype.propertyIsEnumerable;
        function P(r) {
            if (r == null)
                throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(r);
        }
        function E() {
            try {
                if (!Object.assign)
                    return !1;
                var r = new String("abc");
                if (r[5] = "de", Object.getOwnPropertyNames(r)[0] === "5")
                    return !1;
                for (var e = {}, t = 0; t < 10; t++)
                    e["_" + String.fromCharCode(t)] = t;
                var n = Object.getOwnPropertyNames(e).map(function (o) { return e[o]; });
                if (n.join("") !== "0123456789")
                    return !1;
                var a = {};
                return "abcdefghijklmnopqrst".split("").forEach(function (o) { a[o] = o; }), Object.keys(Object.assign({}, a)).join("") === "abcdefghijklmnopqrst";
            }
            catch (o) {
                return !1;
            }
        }
        u.exports = E() ? Object.assign : function (r, e) {
            for (var t, n = P(r), a, o = 1; o < arguments.length; o++) {
                t = Object(arguments[o]);
                for (var f in t)
                    d.call(t, f) && (n[f] = t[f]);
                if (i) {
                    a = i(t);
                    for (var c = 0; c < a.length; c++)
                        w.call(t, a[c]) && (n[a[c]] = t[a[c]]);
                }
            }
            return n;
        };
    });
    var S = h(l());
    var export_default = S.default;
    return { default: export_default };
})();
