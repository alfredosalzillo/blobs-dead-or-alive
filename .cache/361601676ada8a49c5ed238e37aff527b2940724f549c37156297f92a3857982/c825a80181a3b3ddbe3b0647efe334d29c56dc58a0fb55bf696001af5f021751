/* lib/game.ts */
const mod8 = (async () => {
    const { Blob, randomBlob } = await mod6;
    const { randomItem } = await mod11;
    const BOARD_SIZE = 4;
    const MAX_ROUND_POINTS = 100;
    const MAX_BONUS_TIME = 2000;
    const generateRandomBlobs = () => Array(BOARD_SIZE * BOARD_SIZE).fill(0).map(() => randomBlob(200, 200));
    const initialRound = (stage = 1) => {
        const blobs = generateRandomBlobs();
        return ({
            blobs: blobs, captured: [], wanted: randomItem(blobs), time: 3 * 1000, elapsed: 0, points: 0, round: stage
        });
    };
    const calculatePoints = (game) => Math.round(MAX_ROUND_POINTS * (game.time - game.elapsed) / game.time);
    const calculateTimeBonus = (game) => (MAX_BONUS_TIME / 2) + (MAX_BONUS_TIME / (2 ** (game.round - 1)));
    const nextRound = (game) => {
        const blobs = generateRandomBlobs();
        return ({
            blobs: blobs, captured: [...game.captured, game.wanted], wanted: randomItem(blobs), time: game.time - game.elapsed + calculateTimeBonus(game), elapsed: 0, points: game.points + calculatePoints(game), round: game.round + 1
        });
    };
    const getStatus = (game) => {
        if (game.round === 0)
            return "start";
        if (game.elapsed >= game.time)
            return "loose";
        return "run";
    };
    return { BOARD_SIZE, MAX_ROUND_POINTS, MAX_BONUS_TIME, generateRandomBlobs, initialRound, calculatePoints, calculateTimeBonus, nextRound, getStatus };
})();
